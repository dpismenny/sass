// Mixins
// -------------------------
$assets-path: "../assets"

=font($alias, $name)
  @font-face
    font-family: $alias
    src: url("{$assets-path}/fonts/" + $name + ".eot")
    src: url("{$assets-path}/fonts/" + $name + ".eot?#iefix") format("embedded-opentype"), url("{$assets-path}/fonts/" + $name + ".woff") format("woff"), url("{$assets-path}/fonts/" + $name + ".ttf") format("truetype")
    font-weight: normal
    font-style: normal

=break($width)
  @media screen and (max-width: $width)
    @content

=font-smoothing
  -webkit-font-smoothing: antialiased
  -moz-osx-font-smoothing: grayscale

=hide-text
  text-indent: -9999px
  overflow: hidden

// old clearfix method
// =clearfix
//   &:before,
//   &:after
//     content: ""
//     display: table
//   &:after
//     clear: both

=clr
  &:after
    content: ""
    display: table
    clear: both

%clr
  +clr

=cover
  background-repeat: no-repeat
  background-size: cover
  background-position: 50% 50%

=retina
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)
    @content

=text-overflow
  overflow: hidden
  text-overflow: ellipsis
  white-space: nowrap

=justify
  text-align: justify
  font-size: 0
  &:after
    content: ""
    display: inline-block
    width: 100%
    height: 0


=vertical
  text-align: center
  font-size: 0
  &:before
    content: ""
    display: inline-block
    vertical-align: middle
    width: 0
    height: 100%

=scrollbar
  ::-webkit-scrollbar
    @content

=scrollbar-track
  ::-webkit-scrollbar-track
    @content

=scrollbar-thumb
  ::-webkit-scrollbar-thumb
    @content

=scrollbar-track-piece
  ::-webkit-scrollbar-track-piece
    @content

// Simple CSS3 gradients
=g($color1, $color2)
  +background-image(linear-gradient($color1, $color2))

=gh($color1, $color2)
  +background-image(linear-gradient(left, $color1, $color2))

=font-smoothing
  -webkit-font-smoothing: antialiased
  -moz-osx-font-smoothing: grayscale

=gpu
  transform: translate3d(0, 0, 0)

// e.g.: +arr(500,50, #000, l)
=arrow($width, $height, $bg, $direction)
  width: 0px
  height: 0px
  border-style: solid
  @if $direction == t
    border-width: 0 $width / 2 + px $height + px $width / 2 + px
    border-color: transparent transparent $bg transparent
  @if $direction == r
    border-width: $height / 2 + px 0 $height / 2 + px $width + px
    border-color: transparent transparent transparent $bg
  @if $direction == b
    border-width: $height + px $width / 2 + px 0 $width / 2 + px
    border-color: $bg transparent transparent transparent
  @if $direction == l
    border-width: $height / 2 + px $width + px $height / 2 + px 0
    border-color: transparent $bg transparent transparent
  @if $direction == tl
    border-width: $height + px $width + px 0 0
    border-color: $bg transparent transparent transparent
  @if $direction == tr
    border-width: 0 $width + px $height + px 0
    border-color: transparent $bg transparent transparent
  @if $direction == br
    border-width: 0 0 $height + px $width + px
    border-color: transparent transparent $bg transparent
  @if $direction == bl
    border-width: $width + px 0 0 $height + px
    border-color: transparent transparent transparent $bg

// to make smooth edges
=arrow-smoothting
  transform: rotate(0.05deg)

// =placeholder
//  &:-ms-input-placeholder
//    @content
//  }
//  &:-moz-placeholder
//    @content
//  }
//  &::-moz-placeholder
//    @content
//  }
//  &::-webkit-input-placeholder
//    @content
//  }
//  &::placeholder
//    @content
//  }
// }

// Sprites
// -------------------------
$icons: sprite-map("icons/*.png", $spacing: 10px)
// $icons2x: sprite-map("icons2x/*.png", $spacing: 10px)

=image-size($path)
  width: image-width($path)
  height: image-height($path)

=s($sprite, $map: $icons)
  background: sprite($map, $sprite) no-repeat
  // background: inline-image('icons/'+$sprite+'.png','image/png')
  +image-size(sprite-file($map, $sprite))

=sr($sprite)
  // display: block
  // overflow: hidden
  background-image: sprite-url($icons)
  background-position: sprite-position($icons, $sprite)
  background-repeat: no-repeat
  height: image-height(sprite-file($icons, $sprite))
  width: image-width(sprite-file($icons, $sprite))
  @media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 3 / 2), (min--moz-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 144dppx)
    background-image: sprite-url($icons2x)
    background-size: image-width(sprite-path($icons2x)) / 2 image-height(sprite-path($icons2x)) / 2
    background-position: round(nth(sprite-position($icons2x, $sprite), 1) / 2) round(nth(sprite-position($icons2x, $sprite), 2) / 2)
    height: image-height(sprite-file($icons2x, $sprite)) / 2
    width: image-width(sprite-file($icons2x, $sprite)) / 2

=svg($name, $width, $height)
  background: url("{$assets-path}/img/svg/{$name}.svg") no-repeat 0 0
  //background-image: inline-image('icons/svg/'+$sprite+'.svg','image/svg') // to switches sprites to base64, elegant
  +background-size(#{$width}px #{$height}px)
  width: #{$width}px
  height: #{$height}px
